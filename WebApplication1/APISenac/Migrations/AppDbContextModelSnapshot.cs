// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APISenac.Models.Custom_Atribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Delimitador")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Requerimento")
                        .HasColumnType("tinyint");

                    b.Property<string>("TipoAtributo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioInserido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Custom_Atributes");
                });

            modelBuilder.Entity("APISenac.Models.Permition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SistemaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioInserido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SistemaId");

                    b.ToTable("Permitions");
                });

            modelBuilder.Entity("APISenac.Models.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SistemaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioInserido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SistemaId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("APISenac.Models.Profile_CustomAtribute", b =>
                {
                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomAtributeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProfileId", "CustomAtributeId");

                    b.HasIndex("CustomAtributeId");

                    b.ToTable("Profile_CustomAtributes");
                });

            modelBuilder.Entity("APISenac.Models.Profile_Permition", b =>
                {
                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermitionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProfilePermitionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProfileId", "PermitionId");

                    b.HasIndex("PermitionId");

                    b.ToTable("Profile_Permitions");
                });

            modelBuilder.Entity("APISenac.Models.Sistema", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioInserido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sistema");
                });

            modelBuilder.Entity("APISenac.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioInserido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("APISenac.Models.UserProfile_CustomAtribute", b =>
                {
                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomAtributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserProfileId", "CustomAtributeId");

                    b.HasIndex("CustomAtributeId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("UserId");

                    b.ToTable("UserProfile_CustomAtributes");
                });

            modelBuilder.Entity("APISenac.Models.User_Profile", b =>
                {
                    b.Property<Guid>("UserProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserProfileId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Profiles");
                });

            modelBuilder.Entity("APISenac.Models.Permition", b =>
                {
                    b.HasOne("APISenac.Models.Sistema", "Sistema")
                        .WithMany()
                        .HasForeignKey("SistemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sistema");
                });

            modelBuilder.Entity("APISenac.Models.Profile", b =>
                {
                    b.HasOne("APISenac.Models.Sistema", "Sistema")
                        .WithMany()
                        .HasForeignKey("SistemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sistema");
                });

            modelBuilder.Entity("APISenac.Models.Profile_CustomAtribute", b =>
                {
                    b.HasOne("APISenac.Models.Custom_Atribute", "CustomAtribute")
                        .WithMany("Profile_CustomAtributes")
                        .HasForeignKey("CustomAtributeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APISenac.Models.Profile", "Profile")
                        .WithMany("Profile_CustomAtributes")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CustomAtribute");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("APISenac.Models.Profile_Permition", b =>
                {
                    b.HasOne("APISenac.Models.Permition", "Permition")
                        .WithMany("Profile_Permitions")
                        .HasForeignKey("PermitionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APISenac.Models.Profile", "Profile")
                        .WithMany("Profile_Permitions")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Permition");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("APISenac.Models.UserProfile_CustomAtribute", b =>
                {
                    b.HasOne("APISenac.Models.Custom_Atribute", "CustomAtribute")
                        .WithMany("UserProfile_CustomAtributes")
                        .HasForeignKey("CustomAtributeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APISenac.Models.Profile", null)
                        .WithMany("UserProfile_CustomAtributes")
                        .HasForeignKey("ProfileId");

                    b.HasOne("APISenac.Models.User", null)
                        .WithMany("UserProfile_CustomAtributes")
                        .HasForeignKey("UserId");

                    b.HasOne("APISenac.Models.User_Profile", "User_Profile")
                        .WithMany("UserProfile_CustomAtributes")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CustomAtribute");

                    b.Navigation("User_Profile");
                });

            modelBuilder.Entity("APISenac.Models.User_Profile", b =>
                {
                    b.HasOne("APISenac.Models.Profile", "Profile")
                        .WithMany("User_Profiles")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APISenac.Models.User", "User")
                        .WithMany("User_Profiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("User");
                });

            modelBuilder.Entity("APISenac.Models.Custom_Atribute", b =>
                {
                    b.Navigation("Profile_CustomAtributes");

                    b.Navigation("UserProfile_CustomAtributes");
                });

            modelBuilder.Entity("APISenac.Models.Permition", b =>
                {
                    b.Navigation("Profile_Permitions");
                });

            modelBuilder.Entity("APISenac.Models.Profile", b =>
                {
                    b.Navigation("Profile_CustomAtributes");

                    b.Navigation("Profile_Permitions");

                    b.Navigation("UserProfile_CustomAtributes");

                    b.Navigation("User_Profiles");
                });

            modelBuilder.Entity("APISenac.Models.User", b =>
                {
                    b.Navigation("UserProfile_CustomAtributes");

                    b.Navigation("User_Profiles");
                });

            modelBuilder.Entity("APISenac.Models.User_Profile", b =>
                {
                    b.Navigation("UserProfile_CustomAtributes");
                });
#pragma warning restore 612, 618
        }
    }
}
